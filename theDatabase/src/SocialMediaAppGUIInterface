public interface SocialMediaAppInterface {

    /**
     * Establishes a connection to the server.
     * @param host The host address of the server.
     * @param port The port number of the server.
     * @throws IOException If an I/O error occurs during the connection.
     */
    void connectToServer(String host, int port) throws IOException;

    /**
     * Sends a request to the server to log in the user.
     * @param username The username of the user.
     * @param password The password of the user.
     * @return A response from the server indicating the login status.
     * @throws IOException If an I/O error occurs during the login process.
     */
    String login(String username, String password) throws IOException;

    /**
     * Sends a request to the server to create a new account.
     * @param username The username for the new account.
     * @param password The password for the new account.
     * @param bio The bio for the new account.
     * @return A response from the server indicating the account creation status.
     * @throws IOException If an I/O error occurs during the account creation process.
     */
    String createAccount(String username, String password, String bio) throws IOException;

    /**
     * Logs out the current user and closes the connection to the server.
     * @throws IOException If an I/O error occurs during the logout process.
     */
    void logout() throws IOException;

    /**
     * Refreshes the list of friends for the current user.
     * @return A list of friends' usernames.
     * @throws IOException If an I/O error occurs while fetching the list of friends.
     */
    List<String> refreshFriendsList() throws IOException;

    /**
     * Refreshes the list of blocked users for the current user.
     * @return A list of blocked users' usernames.
     * @throws IOException If an I/O error occurs while fetching the list of blocked users.
     */
    List<String> refreshBlockedList() throws IOException;

    /**
     * Sends a message to a friend.
     * @param friendUsername The username of the friend to whom the message is sent.
     * @param message The message content.
     * @return A response from the server indicating the send status.
     * @throws IOException If an I/O error occurs during message sending.
     */
    String sendMessage(String friendUsername, String message) throws IOException;

    /**
     * Deletes a message from a conversation.
     * @param friendUsername The username of the friend whose message is deleted.
     * @param message The message content to delete.
     * @return A response from the server indicating the delete status.
     * @throws IOException If an I/O error occurs during message deletion.
     */
    String deleteMessage(String friendUsername, String message) throws IOException;

    /**
     * Loads the conversation with a specific friend.
     * @param friendUsername The username of the friend.
     * @return A list of messages in the conversation.
     * @throws IOException If an I/O error occurs while loading the conversation.
     */
    List<String> loadConversation(String friendUsername) throws IOException;

    /**
     * Searches for users on the platform by username.
     * @param query The search query.
     * @return A list of usernames matching the query.
     * @throws IOException If an I/O error occurs during the search.
     */
    List<String> searchUsers(String query) throws IOException;

    /**
     * Blocks a user by username.
     * @param username The username of the user to block.
     * @return A response from the server indicating the block status.
     * @throws IOException If an I/O error occurs during the block process.
     */
    String blockUser(String username) throws IOException;

    /**
     * Unblocks a user by username.
     * @param username The username of the user to unblock.
     * @return A response from the server indicating the unblock status.
     * @throws IOException If an I/O error occurs during the unblock process.
     */
    String unblockUser(String username) throws IOException;
}
